Début du projet Nanoml

Objectif :
Créer un programme pouvant lire un fichier texte avec un certain type de balises similaire au html.
Ces balises seront interprété afin de créer une page de texte dans le terminal ou dans un fichier txt.

Le projet se séparera en deux parties disctinctes:
_ La première partie consitera à créer des outils permettant de reconnaitre et distinguer les différentes balises des fichiers textes.
_ La deuxième partie quant à elle consistera à créer le nouveaux fichier txt à l'aide des balises décripter dans la partie précédante. 

# 26/01/2024
Création d'outils pouvant s'avéré utile pour la suite du projet, 3 fonctions permettant de récolter les informations suivantes:
_ le nombre de ligne dans un ficher txt
_ le nombre de caractères par ligne de texte
_ Une fonction affichant le nombre de caractère pour chaque ligne

# 29/01/2024
Création de la structure permettant de générer un arbre qui servira pour la retranscription du fichier Nanoml

# 30-31/01/2024
Création de fonction d'incrémentations et de supression de l'arbre, des tests doivent encore être fait sur ces fonctions  

# 09/02/2024 
_ Débuggage de la structure de l'arbre et de ces fonctions
_ Déplacement des fonction de l'arbre dans un fichier et une bibliothèque à part : arbre.c et arbre.h

# 16/02/2024
_ Création du github et ajout de Maxence dans l'équipe de développement, ce dernier sera en charge de l'analyse syntaxique des fichiers txt. 

# 17-18/02/2024
_ Poursuite du debbuggage de l'arbre : 
des erreur liées aux pointeurs et à l'initialisation des variables on été constaté. 
Des modification doivent être faites

# 19/02/2024
_ début de du codage de l'analyse syntaxique

# 22-23/02/2024
_ correction des char de l'arbre les variables balise et valeur et les fonctions de l'arbre ont été modifié avec l'ajout de pointeurs
la librairie standard string.h a été ajouté afin de mettre à jours les fonctions d'initialisation et corrigé les problèmes de fuite de mémoire.

# 26/02/2024
_ début de la programmation des fichiers d'interpretation le but est de lire l'arbre afin de produire un fichier txt interprétant les balises
l'analyse syntaxique étant faites séparémant du coté de Maxence le but pour le moment est de créer des arbres dans l'agencement et les valeurs sont identiques aux fichers
sources du sujet du projet. Le programme commence avec la fonction interpretation contenant une fonction document et annexe contenant à leurs tours des fonctions
donnant à la fin un résultat interprété. 

# 04-05/03/2024
_ un nouveau paramètre à été ajouté dans l'arbre "int deep" indiquant via un nombre la profondeur du noeud dans l'arbre, ce nombre s'avéra très utile pour fournir 
des informations aux fonctions de mise en page pour l'interpretation.
_programmation du fichier d'interpretation pour un avancement plus simple et organiser il a été pris comme décision de s'aider des fichiers de balises présents dans le
sujet du projet. Le but est d'avancer petit à petit en commençant par la source 1 et une fois une que le programme se révéle efficace sur l'un des fichiers on peut 
passer au prochain et l'interpréter le tout en prenant soins de ne pas affecter les résultat du fichier précédant. Actuellement ce 5 mars à 13h02 le fichier source 1 via
d'être interprété, donnant le print* suivant:                                       
+--------------------------------------------------+
|+------------------------------------------------+|         *Toutes les fonctions actuelles affichent un print dans le terminal au lieu de transposer le résultat dans txt.
|Bonjour le monde                                 ||          Cette méthode à été opté pour une meilleur visibilité des résultats. Les fonctions seront par la suite  
|+------------------------------------------------+|          modifié pour remplacer les prints par des putc mais une version antérieurs des fonctions sera accessible 
+--------------------------------------------------+          via à un ancien commit github.
+--------------------------------------------------+
|Auteur : Weinberg Benjamin Date : 23/01/2024      |
+--------------------------------------------------+

différentes fonctions on été créer actuellement:
Interpretation,document,contenu,section, ect... sont coder d'une manière similaire à celle d'une analyse syntaxique en jouant avec des protypes de fonctions et la récursivité afin
de coder petit à petit à programme complexe.
Mais aussi d'autre focntion plus simpliste telles que:
remplissage, colonnes et printLigne qui se charge de la mise en forme du texte, c'est fonction étaient la source de nombreux problèmes lors du débuggage de la source 1 et le seront
aussi très probablement à l'avenir au fur et à mesure que les balises se feront plus nombreuses il faudra donc repasser régurlièrement dessus afin de les modifier 
et obtenir ainsi un code cohérent et capable de s'adapter à toutes les situations. 

_ début de l'interpretation de la source 2 en utilisant le code actuel, le résultat est le suivant: 
+--------------------------------------------------+
|+------------------------------------------------+|
||                                                ||
|+------------------------------------------------+|
+--------------------------------------------------+
+--------------------------------------------------+
|Auteur : Weinberg Benjamin
Date : 23/01/2024     |
+--------------------------------------------------+
des modifications sont donc à faire

_ 06/03/2024
_modification de l'arbre ajout de la structure nanoarbre précédent permettant de revenir au noeud précédant
_ un problème est présent dans la fonction annexe: elle n'afiche qu'une balise sur deux 
